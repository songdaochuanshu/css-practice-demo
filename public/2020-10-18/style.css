:root {
    --background-color: #2c3e50;
    --border-color: #7591AD;
    --text-color: #34495e;
    --color1: #ec3e27;
    --color2: #fd79a8;
    --color3: #0984e3;
    --color4: #00b894;
    --color5: #fdcb6e;
    --color6: #e056fd;
    --color7: #F97F51;
    --color8: #BDC581;
}

* {
    margin: 0;
    padding: 0;
}

html {
    font-size: 14px;
}

body {
    width: 100vw;
    height: 100vh;
    background-color: var(--background-color);
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: 'Montserrat', sans-serif, Arial, 'Microsoft Yahei';
}

.channel {
    position: absolute;
    width: 80%;
    text-align: center;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -200px);
    font-size: 30px;
    font-weight: bold;
    color: #fff;
    z-index: 999;
}

.container {
    position: relative;
    height: 100vh;
    width: 100vw;
    background-color: black;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    perspective: 2000px;
    /* 这个是透视的角度 */
    /* 一会用到这个 */
    /* perspective-origin: left top; */
    transform-style: preserve-3d;
}

.ball {
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: var(--color);
    opacity: 0.8;
    border-radius: 50%;
    /* Z轴移动形成平铺效果，X轴移动形成左右分散 */
    /* transform: translateZ(calc(var(--y) * 100px)) translateX(calc(var(--x) * 30px)); */
    animation: flow 5s ease-in-out infinite both;
    /* 这个是关键，让不同的小球延迟不同的时长形成波浪效果 */
    /* 这里我们利用变量来计算，变量值，有js根据小球位置动态计算 */
    animation-delay: calc(var(--delay) * 0.2s);
}


/* 定义动画 */

@keyframes flow {
    /* y轴移动让整个小球平面形成上下浮动效果 */
    0% {
        transform: 
        translateZ(calc(var(--y) * 100px)) 
        translateX(calc(var(--x) * 30px))
        translateY(50px)
        scale(0.1)
        ;
    }
    50% {
        transform: 
        translateZ(calc(var(--y) * 100px)) 
        translateX(calc(var(--x) * 30px))
        translateY(-50px)
        scale(1)
        ;
    }
    100% {
        transform: 
        translateZ(calc(var(--y) * 100px)) 
        translateX(calc(var(--x) * 30px))
        translateY(50px)
        scale(0.1)
        ;
    }
}